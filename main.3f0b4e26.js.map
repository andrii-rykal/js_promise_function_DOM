{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","document","body","style","printMessage","message","div","createElement","className","innerText","append","module","exports"],"mappings":";AAAA,aAIA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAQ,UAAUF,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SAC7CL,KAAAA,QAAAA,OAAAA,EAAQM,GADX,UALbC,SAASC,KAAKC,MAAQ,0BAWtB,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAML,SAASM,cAAc,OAEnCD,EAAIE,UAAY,UAChBF,EAAIG,UAAYJ,EAChBJ,SAASC,KAAKQ,OAAOJ,IAGvBK,OAAOC,QAAU,CACfnB,QAAAA,EACAW,aAAAA","file":"main.3f0b4e26.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.body.style = 'flex-direction: column;';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: ${element.nodeName},`\n      + ` id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'message';\n  div.innerText = message;\n  document.body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}